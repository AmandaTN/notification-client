{"ast":null,"code":"var _jsxFileName = \"/Users/amandatorresnu/Trabajo/Projects/notification-center/notification-client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport NotificationSchedule from \"./components/notificationSchedule\";\nimport Schedules from \"./components/schedules\";\nimport socketIO from \"socket.io-client\";\nconst socket = socketIO.connect(\"http://localhost:4000\");\n\n//React Toastify imports\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [schedules, setSchedules] = useState([]);\n  useEffect(() => {\n    socket.on(\"sendSchedules\", schedules => {\n      setSchedules(schedules);\n    });\n    //Listens for the notification from the server\n    socket.on(\"notification\", data => {\n      toast.success(` It's time for ${data.title}`);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NotificationSchedule, {\n      socket: socket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Schedules, {\n      schedules: schedules\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n};\n_s(App, \"+ONLF2JzkB4QBHXWn6bXeilsnFA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","NotificationSchedule","Schedules","socketIO","socket","connect","ToastContainer","toast","App","schedules","setSchedules","on","data","success","title"],"sources":["/Users/amandatorresnu/Trabajo/Projects/notification-center/notification-client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport NotificationSchedule from \"./components/notificationSchedule\";\nimport Schedules from \"./components/schedules\";\nimport socketIO from \"socket.io-client\";\nconst socket = socketIO.connect(\"http://localhost:4000\");\n\n//React Toastify imports\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst App = () => {\n  const [schedules, setSchedules] = useState([]);\n  useEffect(() => {\n    socket.on(\"sendSchedules\", (schedules) => {\n        setSchedules(schedules);\n    });\n    //Listens for the notification from the server\n    socket.on(\"notification\", (data) => {\n        toast.success(` It's time for ${data.title}`);\n    });\n}, []);\n  return (\n      <div>\n          <NotificationSchedule socket={socket} />\n          <Schedules schedules={schedules} />\n          <ToastContainer />\n      </div>\n  );\n}\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,oBAAoB,MAAM,mCAAmC;AACpE,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,MAAMC,MAAM,GAAGD,QAAQ,CAACE,OAAO,CAAC,uBAAuB,CAAC;;AAExD;AACA,OAAO,uCAAuC;AAC9C,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAAC;AAG/C,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9CD,SAAS,CAAC,MAAM;IACdK,MAAM,CAACO,EAAE,CAAC,eAAe,EAAGF,SAAS,IAAK;MACtCC,YAAY,CAACD,SAAS,CAAC;IAC3B,CAAC,CAAC;IACF;IACAL,MAAM,CAACO,EAAE,CAAC,cAAc,EAAGC,IAAI,IAAK;MAChCL,KAAK,CAACM,OAAO,CAAE,kBAAiBD,IAAI,CAACE,KAAM,EAAC,CAAC;IACjD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACJ,oBACI;IAAA,wBACI,QAAC,oBAAoB;MAAC,MAAM,EAAEV;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eACxC,QAAC,SAAS;MAAC,SAAS,EAAEK;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,eACnC,QAAC,cAAc;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAChB;AAEZ,CAAC;AAAA,GAlBKD,GAAG;AAAA,KAAHA,GAAG;AAmBT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}