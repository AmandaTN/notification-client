{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getMessaging, getToken, onMessage } from \"firebase/messaging\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCOYqpCTFGI4AqeWMu7LEnQSfXLxnQFsPQ\",\n  authDomain: \"notificationcenter-aed87.firebaseapp.com\",\n  projectId: \"notificationcenter-aed87\",\n  storageBucket: \"notificationcenter-aed87.appspot.com\",\n  messagingSenderId: \"987243827543\",\n  appId: \"1:987243827543:web:7b6f5daf4cf12da68aae12\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\nconst messaging = getMessaging(firebaseApp);\nexport const getTokenFromFirebase = () => {\n  return getToken(messaging, {\n    vapidKey: \"BMIhiPZyTP89xC_RYg3M8gyPlRtyuvHvH7ukX5OMgUDRIvhsUymvhPWCYqNbukNWA2zPYlgzia7KiREgua8k7Wc\"\n  }).then(currentToken => {\n    if (currentToken) {\n      console.log(\"current token for client: \", currentToken);\n    } else {\n      console.log(\"No registration token available. Request permission to generate one.\");\n    }\n  }).catch(err => {\n    console.log(\"An error occurred while retrieving token. \", err);\n  });\n};\nexport const onMessageListener = () => new Promise(resolve => {\n  onMessage(messaging, payload => {\n    console.log(payload);\n    resolve(payload);\n  });\n});","map":{"version":3,"names":["initializeApp","getMessaging","getToken","onMessage","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","messaging","getTokenFromFirebase","vapidKey","then","currentToken","console","log","catch","err","onMessageListener","Promise","resolve","payload"],"sources":["/Users/amandatorresnu/Trabajo/Projects/notification-center/notification-client/src/firebase.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getMessaging, getToken, onMessage } from \"firebase/messaging\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCOYqpCTFGI4AqeWMu7LEnQSfXLxnQFsPQ\",\n  authDomain: \"notificationcenter-aed87.firebaseapp.com\",\n  projectId: \"notificationcenter-aed87\",\n  storageBucket: \"notificationcenter-aed87.appspot.com\",\n  messagingSenderId: \"987243827543\",\n  appId: \"1:987243827543:web:7b6f5daf4cf12da68aae12\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst messaging = getMessaging(firebaseApp);\n\nexport const getTokenFromFirebase = () => {\n\treturn getToken(messaging, {\n\t\tvapidKey: \"BMIhiPZyTP89xC_RYg3M8gyPlRtyuvHvH7ukX5OMgUDRIvhsUymvhPWCYqNbukNWA2zPYlgzia7KiREgua8k7Wc\",\n\t})\n\t\t.then((currentToken) => {\n\t\t\tif (currentToken) {\n\t\t\t\tconsole.log(\"current token for client: \", currentToken);\n\t\t\t} else {\n\t\t\t\tconsole.log(\n\t\t\t\t\t\"No registration token available. Request permission to generate one.\"\n\t\t\t\t);\n\t\t\t}\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(\"An error occurred while retrieving token. \", err);\n\t\t});\n};\n\nexport const onMessageListener = () =>\n\tnew Promise((resolve) => {\n\t\tonMessage(messaging, (payload) => {\n\t\t\tconsole.log(payload);\n\t\t\tresolve(payload);\n\t\t});\n\t});"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,YAAY,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,oBAAoB;AAEtE,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,0CAA0C;EACtDC,SAAS,EAAE,0BAA0B;EACrCC,aAAa,EAAE,sCAAsC;EACrDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMC,WAAW,GAAGX,aAAa,CAACI,cAAc,CAAC;AAEjD,MAAMQ,SAAS,GAAGX,YAAY,CAACU,WAAW,CAAC;AAE3C,OAAO,MAAME,oBAAoB,GAAG,MAAM;EACzC,OAAOX,QAAQ,CAACU,SAAS,EAAE;IAC1BE,QAAQ,EAAE;EACX,CAAC,CAAC,CACAC,IAAI,CAAEC,YAAY,IAAK;IACvB,IAAIA,YAAY,EAAE;MACjBC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,YAAY,CAAC;IACxD,CAAC,MAAM;MACNC,OAAO,CAACC,GAAG,CACV,sEAAsE,CACtE;IACF;EACD,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;IACfH,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEE,GAAG,CAAC;EAC/D,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAG,MAChC,IAAIC,OAAO,CAAEC,OAAO,IAAK;EACxBpB,SAAS,CAACS,SAAS,EAAGY,OAAO,IAAK;IACjCP,OAAO,CAACC,GAAG,CAACM,OAAO,CAAC;IACpBD,OAAO,CAACC,OAAO,CAAC;EACjB,CAAC,CAAC;AACH,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}